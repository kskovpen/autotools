# English translations for GNU gettext package.
# Copyright (C) 2025 Free Software Foundation, Inc.
# This file is distributed under the same license as the GNU gettext package.
# Automatically generated, 2025.
#
# All this catalog "translates" are quotation characters.
# The msgids must be ASCII and therefore cannot contain real quotation
# characters, only substitutes like grave accent (0x60), apostrophe (0x27)
# and double quote (0x22). These substitutes look strange; see
# https://www.cl.cam.ac.uk/~mgk25/ucs/quotes.html
#
# This catalog translates grave accent (0x60) and apostrophe (0x27) to
# left single quotation mark (U+2018) and right single quotation mark (U+2019).
# It also translates pairs of apostrophe (0x27) to
# left single quotation mark (U+2018) and right single quotation mark (U+2019)
# and pairs of quotation mark (0x22) to
# left double quotation mark (U+201C) and right double quotation mark (U+201D).
#
# When output to an UTF-8 terminal, the quotation characters appear perfectly.
# When output to an ISO-8859-1 terminal, the single quotation marks are
# transliterated to apostrophes (by iconv in glibc 2.2 or newer) or to
# grave/acute accent (by libiconv), and the double quotation marks are
# transliterated to 0x22.
# When output to an ASCII terminal, the single quotation marks are
# transliterated to apostrophes, and the double quotation marks are
# transliterated to 0x22.
#
# This catalog furthermore displays the text between the quotation marks in
# bold face, assuming the VT100/XTerm escape sequences.
#
msgid ""
msgstr ""
"Project-Id-Version: GNU gettext 0.26\n"
"Report-Msgid-Bugs-To: bug-gettext@gnu.org\n"
"POT-Creation-Date: 2025-06-28 23:48+0200\n"
"PO-Revision-Date: 2025-06-28 23:48+0200\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: en@boldquot\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: src/envsubst.c:112 src/gettext.c:138 src/ngettext.c:128
#: src/printf_gettext.c:111 src/printf_ngettext.c:116
#, c-format, no-wrap
msgid ""
"Copyright (C) %s Free Software Foundation, Inc.\n"
"License GPLv3+: GNU GPL version 3 or later <%s>\n"
"This is free software: you are free to change and redistribute it.\n"
"There is NO WARRANTY, to the extent permitted by law.\n"
msgstr ""
"Copyright (C) %s Free Software Foundation, Inc.\n"
"License GPLv3+: GNU GPL version 3 or later <%s>\n"
"This is free software: you are free to change and redistribute it.\n"
"There is NO WARRANTY, to the extent permitted by law.\n"

#: src/envsubst.c:118 src/gettext.c:144 src/ngettext.c:134
#: src/printf_gettext.c:117 src/printf_ngettext.c:122
#, c-format
msgid "Written by %s.\n"
msgstr "Written by %s.\n"

#. This is a proper name. See the gettext manual, section Names.
#: src/envsubst.c:118 src/printf_gettext.c:117 src/printf_ngettext.c:122
msgid "Bruno Haible"
msgstr "Bruno Haible"

#: src/envsubst.c:127 src/gettext.c:162 src/ngettext.c:146
#, c-format
msgid "too many arguments"
msgstr "too many arguments"

#: src/envsubst.c:138 src/gettext.c:172 src/ngettext.c:158
#: src/printf_ngettext.c:133
#, c-format
msgid "missing arguments"
msgstr "missing arguments"

#: src/envsubst.c:176 src/gettext.c:249 src/ngettext.c:216
#: src/printf_gettext.c:165 src/printf_ngettext.c:197
#, c-format
msgid "Try '%s --help' for more information.\n"
msgstr "Try ‚Äò[1m%s --help[0m‚Äô for more information.\n"

#: src/envsubst.c:181
#, c-format, no-wrap
msgid "Usage: %s [OPTION] [SHELL-FORMAT]\n"
msgstr "Usage: %s [OPTION] [SHELL-FORMAT]\n"

#: src/envsubst.c:186
#, c-format, no-wrap
msgid "Substitutes the values of environment variables.\n"
msgstr "Substitutes the values of environment variables.\n"

#: src/envsubst.c:190
#, c-format, no-wrap
msgid "Operation mode:\n"
msgstr "Operation mode:\n"

#: src/envsubst.c:193
#, c-format, no-wrap
msgid "  -v, --variables             output the variables occurring in SHELL-FORMAT\n"
msgstr "  -v, --variables             output the variables occurring in SHELL-FORMAT\n"

#: src/envsubst.c:197 src/gettext.c:280 src/ngettext.c:248
#: src/printf_gettext.c:188 src/printf_ngettext.c:224
#, c-format, no-wrap
msgid "Informative output:\n"
msgstr "Informative output:\n"

#: src/envsubst.c:200
#, c-format, no-wrap
msgid "  -h, --help                  display this help and exit\n"
msgstr "  -h, --help                  display this help and exit\n"

#: src/envsubst.c:203
#, c-format, no-wrap
msgid "  -V, --version               output version information and exit\n"
msgstr "  -V, --version               output version information and exit\n"

#: src/envsubst.c:207
#, c-format, no-wrap
msgid ""
"In normal operation mode, standard input is copied to standard output,\n"
"with references to environment variables of the form $VARIABLE or ${VARIABLE}\n"
"being replaced with the corresponding values.  If a SHELL-FORMAT is given,\n"
"only those environment variables that are referenced in SHELL-FORMAT are\n"
"substituted; otherwise all environment variables references occurring in\n"
"standard input are substituted.\n"
msgstr ""
"In normal operation mode, standard input is copied to standard output,\n"
"with references to environment variables of the form $VARIABLE or ${VARIABLE}\n"
"being replaced with the corresponding values.  If a SHELL-FORMAT is given,\n"
"only those environment variables that are referenced in SHELL-FORMAT are\n"
"substituted; otherwise all environment variables references occurring in\n"
"standard input are substituted.\n"

#: src/envsubst.c:216
#, c-format, no-wrap
msgid ""
"When --variables is used, standard input is ignored, and the output consists\n"
"of the environment variables that are referenced in SHELL-FORMAT, one per line.\n"
msgstr ""
"When --variables is used, standard input is ignored, and the output consists\n"
"of the environment variables that are referenced in SHELL-FORMAT, one per line.\n"

#. TRANSLATORS: The first placeholder is the web address of the Savannah
#. project of this package.  The second placeholder is the bug-reporting
#. email address for this package.  Please add _another line_ saying
#. "Report translation bugs to <...>\n" with the address for translation
#. bugs (typically your translation team's web or email address).
#: src/envsubst.c:225 src/gettext.c:304 src/ngettext.c:269
#: src/printf_gettext.c:277 src/printf_ngettext.c:313
#, c-format
msgid ""
"Report bugs in the bug tracker at <%s>\n"
"or by email to <%s>.\n"
msgstr ""
"Report bugs in the bug tracker at <%s>\n"
"or by email to <%s>.\n"

#: src/envsubst.c:453
#, c-format
msgid "error while reading \"%s\""
msgstr "error while reading ‚Äú[1m%s[0m‚Äù"

#: src/envsubst.c:453
msgid "standard input"
msgstr "standard input"

#. This is a proper name. See the gettext manual, section Names.
#: src/gettext.c:144 src/ngettext.c:134
msgid "Ulrich Drepper"
msgstr "Ulrich Drepper"

#: src/gettext.c:254
#, c-format, no-wrap
msgid ""
"Usage: %s [OPTION] [[TEXTDOMAIN] MSGID]\n"
"or:    %s [OPTION] -s [MSGID]...\n"
msgstr ""
"Usage: %s [OPTION] [[TEXTDOMAIN] MSGID]\n"
"or:    %s [OPTION] -s [MSGID]...\n"

#: src/gettext.c:260
#, c-format, no-wrap
msgid "Display native language translation of a textual message.\n"
msgstr "Display native language translation of a textual message.\n"

#: src/gettext.c:263 src/ngettext.c:230 src/printf_gettext.c:179
#: src/printf_ngettext.c:211
#, c-format
msgid "Options and arguments:\n"
msgstr "Options and arguments:\n"

#: src/gettext.c:266
#, c-format, no-wrap
msgid "  -d, --domain=TEXTDOMAIN   retrieve translated messages from TEXTDOMAIN\n"
msgstr "  -d, --domain=TEXTDOMAIN   retrieve translated messages from TEXTDOMAIN\n"

#: src/gettext.c:268 src/ngettext.c:235
#, c-format
msgid "  -c, --context=CONTEXT     specify context for MSGID\n"
msgstr "  -c, --context=CONTEXT     specify context for MSGID\n"

#: src/gettext.c:270 src/ngettext.c:237
#, c-format
msgid "  -e                        enable expansion of some escape sequences\n"
msgstr ""
"  -e                        enable expansion of some escape sequences\n"

#: src/gettext.c:272
#, c-format
msgid "  -n                        suppress trailing newline\n"
msgstr "  -n                        suppress trailing newline\n"

#: src/gettext.c:274 src/ngettext.c:239
#, c-format
msgid "  -E                        (ignored for compatibility)\n"
msgstr "  -E                        (ignored for compatibility)\n"

#: src/gettext.c:276
#, c-format
msgid ""
"  [TEXTDOMAIN] MSGID        retrieve translated message corresponding\n"
"                            to MSGID from TEXTDOMAIN\n"
msgstr ""
"  [TEXTDOMAIN] MSGID        retrieve translated message corresponding\n"
"                            to MSGID from TEXTDOMAIN\n"

#: src/gettext.c:282 src/ngettext.c:250 src/printf_gettext.c:190
#: src/printf_ngettext.c:226
#, c-format
msgid "  -h, --help                display this help and exit\n"
msgstr "  -h, --help                display this help and exit\n"

#: src/gettext.c:284 src/ngettext.c:252 src/printf_gettext.c:192
#: src/printf_ngettext.c:228
#, c-format
msgid "  -V, --version             display version information and exit\n"
msgstr "  -V, --version             display version information and exit\n"

#: src/gettext.c:288
#, c-format, no-wrap
msgid ""
"If the TEXTDOMAIN parameter is not given, the domain is determined from the\n"
"environment variable TEXTDOMAIN.  If the message catalog is not found in the\n"
"regular directory, another location can be specified with the environment\n"
"variable TEXTDOMAINDIR.\n"
"When used with the -s option the program behaves like the 'echo' command.\n"
"But it does not simply copy its arguments to stdout.  Instead those messages\n"
"found in the selected catalog are translated.\n"
"Standard search directory: %s\n"
msgstr ""
"If the TEXTDOMAIN parameter is not given, the domain is determined from the\n"
"environment variable TEXTDOMAIN.  If the message catalog is not found in the\n"
"regular directory, another location can be specified with the environment\n"
"variable TEXTDOMAINDIR.\n"
"When used with the -s option the program behaves like the ‚Äò[1mecho[0m‚Äô command.\n"
"But it does not simply copy its arguments to stdout.  Instead those messages\n"
"found in the selected catalog are translated.\n"
"Standard search directory: %s\n"

#: src/ngettext.c:221
#, c-format, no-wrap
msgid "Usage: %s [OPTION] [TEXTDOMAIN] MSGID MSGID-PLURAL COUNT\n"
msgstr "Usage: %s [OPTION] [TEXTDOMAIN] MSGID MSGID-PLURAL COUNT\n"

#: src/ngettext.c:226
#, c-format, no-wrap
msgid ""
"Display native language translation of a textual message whose grammatical\n"
"form depends on a number.\n"
msgstr ""
"Display native language translation of a textual message whose grammatical\n"
"form depends on a number.\n"

#: src/ngettext.c:233
#, c-format, no-wrap
msgid "  -d, --domain=TEXTDOMAIN   retrieve translated message from TEXTDOMAIN\n"
msgstr "  -d, --domain=TEXTDOMAIN   retrieve translated message from TEXTDOMAIN\n"

#: src/ngettext.c:241
#, c-format
msgid ""
"  [TEXTDOMAIN]              retrieve translated message from TEXTDOMAIN\n"
msgstr ""
"  [TEXTDOMAIN]              retrieve translated message from TEXTDOMAIN\n"

#: src/ngettext.c:243
#, c-format
msgid ""
"  MSGID MSGID-PLURAL        translate MSGID (singular) / MSGID-PLURAL "
"(plural)\n"
msgstr ""
"  MSGID MSGID-PLURAL        translate MSGID (singular) / MSGID-PLURAL "
"(plural)\n"

#: src/ngettext.c:245 src/printf_ngettext.c:219
#, c-format
msgid ""
"  COUNT                     choose singular/plural form based on this value\n"
msgstr ""
"  COUNT                     choose singular/plural form based on this value\n"

#: src/ngettext.c:256
#, c-format, no-wrap
msgid ""
"If the TEXTDOMAIN parameter is not given, the domain is determined from the\n"
"environment variable TEXTDOMAIN.  If the message catalog is not found in the\n"
"regular directory, another location can be specified with the environment\n"
"variable TEXTDOMAINDIR.\n"
"Standard search directory: %s\n"
msgstr ""
"If the TEXTDOMAIN parameter is not given, the domain is determined from the\n"
"environment variable TEXTDOMAIN.  If the message catalog is not found in the\n"
"regular directory, another location can be specified with the environment\n"
"variable TEXTDOMAINDIR.\n"
"Standard search directory: %s\n"

#: src/printf-command.c:154
#, c-format
msgid ""
"In the directive number %zu, the argument number 0 is not a positive integer."
msgstr ""
"In the directive number %zu, the argument number 0 is not a positive integer."

#: src/printf-command.c:237
#, c-format
msgid "The string ends in the middle of a directive."
msgstr "The string ends in the middle of a directive."

#: src/printf-command.c:242
#, c-format
msgid ""
"In the directive number %zu, the character '%c' is not a valid conversion "
"specifier."
msgstr ""
"In the directive number %zu, the character ‚Äò[1m%c[0m‚Äô is not a valid "
"conversion specifier."

#: src/printf-command.c:246
#, c-format
msgid ""
"The character that terminates the directive number %zu is not a valid "
"conversion specifier."
msgstr ""
"The character that terminates the directive number %zu is not a valid "
"conversion specifier."

#: src/printf-command.c:255 src/printf-command.c:259
#, c-format
msgid ""
"In the directive number %zu, the flag '%c' is invalid for the conversion "
"'%c'."
msgstr ""
"In the directive number %zu, the flag ‚Äò[1m%c[0m‚Äô is invalid for the "
"conversion '%c'."

#: src/printf-command.c:278 src/printf-command.c:292
#, c-format
msgid ""
"The string refers to arguments both through absolute argument numbers and "
"through unnumbered argument specifications."
msgstr ""
"The string refers to arguments both through absolute argument numbers and "
"through unnumbered argument specifications."

#: src/printf-command.c:394
#, c-format
msgid "The string ends in the middle of an escape sequence."
msgstr "The string ends in the middle of an escape sequence."

#: src/printf-command.c:402
#, c-format
msgid "The escape sequence '%c%c' is unsupported (not in POSIX)."
msgstr "The escape sequence ‚Äò[1m%c%c[0m‚Äô is unsupported (not in POSIX)."

#: src/printf-command.c:403
#, c-format
msgid "The escape sequence '%c%c' is invalid."
msgstr "The escape sequence ‚Äò[1m%c%c[0m‚Äô is invalid."

#: src/printf-command.c:407
#, c-format
msgid "This escape sequence is invalid."
msgstr "This escape sequence is invalid."

#: src/printf-command.c:455 src/printf-command.c:501 src/printf-command.c:568
#: src/printf-command.c:638 src/printf-command.c:691
#, c-format
msgid "write error"
msgstr "write error"

#: src/printf-command.c:529 src/printf-command.c:556 src/printf-command.c:597
#: src/printf-command.c:626 src/printf-command.c:679
#, c-format
msgid "%s: expected a numeric value"
msgstr "%s: expected a numeric value"

#: src/printf-command.c:550 src/printf-command.c:620 src/printf-command.c:673
#, c-format
msgid "%s: value not completely converted"
msgstr "%s: value not completely converted"

#: src/printf-command.c:717
#, c-format
msgid ""
"The translated format string consumes %zu arguments, whereas the original "
"format string consumes only %zu arguments."
msgstr ""
"The translated format string consumes %zu arguments, whereas the original "
"format string consumes only %zu arguments."

#: src/printf-command.c:728
#, c-format
msgid "warning: ignoring excess arguments, starting with %s"
msgstr "warning: ignoring excess arguments, starting with %s"

#: src/printf_gettext.c:128
#, c-format
msgid "missing format string"
msgstr "missing format string"

#: src/printf_gettext.c:170
#, c-format, no-wrap
msgid "Usage: %s [OPTION] FORMAT [ARGUMENT]...\n"
msgstr "Usage: %s [OPTION] FORMAT [ARGUMENT]...\n"

#: src/printf_gettext.c:175
#, c-format, no-wrap
msgid ""
"Produces formatted output, applying the native language translation of FORMAT\n"
"to the ARGUMENTs.\n"
msgstr ""
"Produces formatted output, applying the native language translation of FORMAT\n"
"to the ARGUMENTs.\n"

#: src/printf_gettext.c:181 src/printf_ngettext.c:213
#, c-format
msgid "  -c, --context=CONTEXT     specify context for FORMAT\n"
msgstr "  -c, --context=CONTEXT     specify context for FORMAT\n"

#: src/printf_gettext.c:183
#, c-format
msgid "  FORMAT                    format string\n"
msgstr "  FORMAT                    format string\n"

#: src/printf_gettext.c:185 src/printf_ngettext.c:221
#, c-format
msgid "  ARGUMENT                  string or numeric argument\n"
msgstr "  ARGUMENT                  string or numeric argument\n"

#: src/printf_gettext.c:196
#, c-format, no-wrap
msgid ""
"The format string consists of\n"
"  - plain text,\n"
"  - directives, that start with '%c',\n"
"  - escape sequences, that start with a backslash.\n"
msgstr ""
"The format string consists of\n"
"  - plain text,\n"
"  - directives, that start with '%c',\n"
"  - escape sequences, that start with a backslash.\n"

#: src/printf_gettext.c:204 src/printf_ngettext.c:240
#, c-format, no-wrap
msgid ""
"A directive that consumes an argument\n"
"  - starts with '%s' or '%s' where %s is a positive integer,\n"
"  - is optionally followed by any of the characters '%c', '%c', '%c', '%c', '%c',\n"
"    each of which acts as a flag,\n"
"  - is optionally followed by a width specification (a nonnegative integer),\n"
"  - is optionally followed by '%c' and a precision specification (an optional\n"
"    nonnegative integer),\n"
"  - is finished by a specifier\n"
"      - '%c', that prints a character,\n"
"      - '%c', that prints a string,\n"
"      - '%c', '%c', that print an integer,\n"
"      - '%c', '%c', '%c', '%c', that print an unsigned (nonnegative) integer,\n"
"      - '%c', '%c', that print a floating-point number in scientific notation,\n"
"      - '%c', '%c', that print a floating-point number without an exponent,\n"
"      - '%c', '%c', that print a floating-point number in general notation,\n"
"      - '%c', '%c', that print a floating-point number in hexadecimal notation.\n"
"Additionally there is the directive '%s', that prints a single '%c'.\n"
msgstr ""
"A directive that consumes an argument\n"
"  - starts with ‚Äò[1m%s[0m‚Äô or ‚Äò[1m%s[0m‚Äô where %s is a positive integer,\n"
"  - is optionally followed by any of the characters '%c', '%c', '%c', '%c', '%c',\n"
"    each of which acts as a flag,\n"
"  - is optionally followed by a width specification (a nonnegative integer),\n"
"  - is optionally followed by ‚Äò[1m%c[0m‚Äô and a precision specification (an optional\n"
"    nonnegative integer),\n"
"  - is finished by a specifier\n"
"      - '%c', that prints a character,\n"
"      - '%c', that prints a string,\n"
"      - '%c', '%c', that print an integer,\n"
"      - '%c', '%c', '%c', '%c', that print an unsigned (nonnegative) integer,\n"
"      - '%c', '%c', that print a floating-point number in scientific notation,\n"
"      - '%c', '%c', that print a floating-point number without an exponent,\n"
"      - '%c', '%c', that print a floating-point number in general notation,\n"
"      - '%c', '%c', that print a floating-point number in hexadecimal notation.\n"
"Additionally there is the directive '%s', that prints a single '%c'.\n"

#: src/printf_gettext.c:233 src/printf_ngettext.c:269
#, c-format, no-wrap
msgid ""
"If a directive specifies the argument by its number ('%s' notation),\n"
"all directives that consume an argument must do so.\n"
msgstr ""
"If a directive specifies the argument by its number ('%s' notation),\n"
"all directives that consume an argument must do so.\n"

#. TRANSLATORS: Most of the placeholders expand to 2 characters.
#. The last placeholder expands to 4 characters.
#: src/printf_gettext.c:240 src/printf_ngettext.c:276
#, c-format
msgid ""
"The escape sequences are:\n"
"\n"
"  %s      backslash\n"
"  %s      alert (BEL)\n"
"  %s      backspace (BS)\n"
"  %s      form feed (FF)\n"
"  %s      new line (LF)\n"
"  %s      carriage return (CR)\n"
"  %s      horizontal tab (HT)\n"
"  %s      vertical tab (VT)\n"
"  %s    octal number with 1 to 3 octal digits\n"
msgstr ""
"The escape sequences are:\n"
"\n"
"  %s      backslash\n"
"  %s      alert (BEL)\n"
"  %s      backspace (BS)\n"
"  %s      form feed (FF)\n"
"  %s      new line (LF)\n"
"  %s      carriage return (CR)\n"
"  %s      horizontal tab (HT)\n"
"  %s      vertical tab (VT)\n"
"  %s    octal number with 1 to 3 octal digits\n"

#: src/printf_gettext.c:255 src/printf_ngettext.c:291
#, c-format
msgid "Environment variables:\n"
msgstr "Environment variables:\n"

#: src/printf_gettext.c:259 src/printf_ngettext.c:295
#, c-format, no-wrap
msgid ""
"The translation of the format string is looked up in the translation domain\n"
"given by the environment variable %s.\n"
msgstr ""
"The translation of the format string is looked up in the translation domain\n"
"given by the environment variable %s.\n"

#: src/printf_gettext.c:264 src/printf_ngettext.c:300
#, c-format, no-wrap
msgid ""
"It is looked up in the catalogs directory given by the environment variable\n"
"%s or, if not present, in the default catalogs directory.\n"
"This binary is configured to use the default catalogs directory:\n"
"%s\n"
msgstr ""
"It is looked up in the catalogs directory given by the environment variable\n"
"%s or, if not present, in the default catalogs directory.\n"
"This binary is configured to use the default catalogs directory:\n"
"%s\n"

#: src/printf_ngettext.c:202
#, c-format, no-wrap
msgid "Usage: %s [OPTION] FORMAT FORMAT-PLURAL COUNT [ARGUMENT]...\n"
msgstr "Usage: %s [OPTION] FORMAT FORMAT-PLURAL COUNT [ARGUMENT]...\n"

#: src/printf_ngettext.c:207
#, c-format, no-wrap
msgid ""
"Produces formatted output, applying the native language translation of FORMAT\n"
"and FORMAT-PLURAL, depending on COUNT, to the ARGUMENTs.\n"
msgstr ""
"Produces formatted output, applying the native language translation of FORMAT\n"
"and FORMAT-PLURAL, depending on COUNT, to the ARGUMENTs.\n"

#: src/printf_ngettext.c:215
#, c-format
msgid "  FORMAT                    English singular form of format string\n"
msgstr "  FORMAT                    English singular form of format string\n"

#: src/printf_ngettext.c:217
#, c-format
msgid "  FORMAT-PLURAL             English plural form of format string\n"
msgstr "  FORMAT-PLURAL             English plural form of format string\n"

#: src/printf_ngettext.c:232
#, c-format, no-wrap
msgid ""
"Each format string consists of\n"
"  - plain text,\n"
"  - directives, that start with '%c',\n"
"  - escape sequences, that start with a backslash.\n"
msgstr ""
"Each format string consists of\n"
"  - plain text,\n"
"  - directives, that start with '%c',\n"
"  - escape sequences, that start with a backslash.\n"
