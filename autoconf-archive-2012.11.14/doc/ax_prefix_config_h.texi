@node ax_prefix_config_h
@unnumberedsec ax_prefix_config_h

@majorheading Synopsis

@smallexample
AX_PREFIX_CONFIG_H [(OUTPUT-HEADER [,PREFIX [,ORIG-HEADER]])]
@end smallexample

@majorheading Description

This is a new variant from ac_prefix_config_ this one will use a
lowercase-prefix if the config-define was starting with a
lowercase-char, e.g. "#define const", "#define restrict", or "#define
off_t", (and this one can live in another directory, e.g.
testpkg/config.h therefore I decided to move the output-header to be the
first arg)

takes the usual config.h generated header file; looks for each of the
generated "#define SOMEDEF" lines, and prefixes the defined name (ie.
makes it "#define PREFIX_SOMEDEF". The result is written to the output
config.header file. The PREFIX is converted to uppercase for the
conversions.

Defaults:

@smallexample
  OUTPUT-HEADER = $PACKAGE-config.h
  PREFIX = $PACKAGE
  ORIG-HEADER, from AM_CONFIG_HEADER(config.h)
@end smallexample

Your configure.ac script should contain both macros in this order, and
unlike the earlier variations of this prefix-macro it is okay to place
the AX_PREFIX_CONFIG_H call before the AC_OUTPUT invokation.

Example:

@smallexample
  AC_INIT(config.h.in)        # config.h.in as created by "autoheader"
  AM_INIT_AUTOMAKE(testpkg, 0.1.1)    # makes #undef VERSION and PACKAGE
  AM_CONFIG_HEADER(config.h)          # prep config.h from config.h.in
  AX_PREFIX_CONFIG_H(mylib/_config.h) # prep mylib/_config.h from it..
  AC_MEMORY_H                         # makes "#undef NEED_MEMORY_H"
  AC_C_CONST_H                        # makes "#undef const"
  AC_OUTPUT(Makefile)                 # creates the "config.h" now
                                      # and also mylib/_config.h
@end smallexample

if the argument to AX_PREFIX_CONFIG_H would have been omitted then the
default outputfile would have been called simply "testpkg-config.h", but
even under the name "mylib/_config.h" it contains prefix-defines like

@smallexample
  #ifndef TESTPKG_VERSION
  #define TESTPKG_VERSION "0.1.1"
  #endif
  #ifndef TESTPKG_NEED_MEMORY_H
  #define TESTPKG_NEED_MEMORY_H 1
  #endif
  #ifndef _testpkg_const
  #define _testpkg_const _const
  #endif
@end smallexample

and this "mylib/_config.h" can be installed along with other
header-files, which is most convenient when creating a shared library
(that has some headers) where some functionality is dependent on the
OS-features detected at compile-time. No need to invent some
"mylib-confdefs.h.in" manually. :-)

Note that some AC_DEFINEs that end up in the config.h file are actually
self-referential - e.g. AC_C_INLINE, AC_C_CONST, and the AC_TYPE_OFF_T
say that they "will define inline|const|off_t if the system does not do
it by itself". You might want to clean up about these - consider an
extra mylib/conf.h that reads something like:

@smallexample
  #include <mylib/_config.h>
  #ifndef _testpkg_const
  #define _testpkg_const const
  #endif
@end smallexample

and then start using _testpkg_const in the header files. That is also a
good thing to differentiate whether some library-user has starting to
take up with a different compiler, so perhaps it could read something
like this:

@smallexample
  #ifdef _MSC_VER
  #include <mylib/_msvc.h>
  #else
  #include <mylib/_config.h>
  #endif
  #ifndef _testpkg_const
  #define _testpkg_const const
  #endif
@end smallexample

@majorheading Source Code

Download the
@uref{http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_prefix_config_h.m4,latest
version of @file{ax_prefix_config_h.m4}} or browse
@uref{http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_prefix_config_h.m4,the
macro's revision history}.

@majorheading License

@w{Copyright @copyright{} 2008 Guido U. Draheim @email{guidod@@gmx.de}} @* @w{Copyright @copyright{} 2008 Marten Svantesson} @* @w{Copyright @copyright{} 2008 Gerald Point @email{Gerald.Point@@labri.fr}}

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 3 of the License, or (at your
option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along
with this program. If not, see <http://www.gnu.org/licenses/>.

As a special exception, the respective Autoconf Macro's copyright owner
gives unlimited permission to copy, distribute and modify the configure
scripts that are the output of Autoconf when processing the Macro. You
need not follow the terms of the GNU General Public License when using
or distributing such scripts, even though portions of the text of the
Macro appear in them. The GNU General Public License (GPL) does govern
all other use of the material that constitutes the Autoconf Macro.

This special exception to the GPL applies to versions of the Autoconf
Macro released by the Autoconf Archive. When you make and distribute a
modified version of the Autoconf Macro, you may extend this special
exception to the GPL to apply to your modified version as well.
